import UIKit

// –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ —É—Ä–æ–∫—É –ø—Ä–æ —Ü–∏–∫–ª—ã
var number = 2
for _ in 0..<19{
    number *= 2
}
number

// –ó–∞–¥–∞–Ω–∏–µ 3
var array1 = [1, 2, 3, 4 ,5]
var array2: [Int] = [1, 2, 3, 4, 5]
var array3: Array<Int> = [1, 2, 3, 4, 5]

// –ó–∞–¥–∞–Ω–∏–µ 4

var task3 = [3, 2, 1]
task3.append(4)
task3.remove(at: 0)
var task3Max = 0
var task3Min = task3[0]
for i in task3 {
    if task3Max < i {
        task3Max = i
    }
    if task3Min > i  {
        task3Min = i
    }
}
print("Array task3 min number = \(task3Min) and max number = \(task3Max). The difference between the minimum and maximum number = \(task3Max - task3Min)")

// –ó–∞–¥–∞–Ω–∏–µ 5

var task4 = [1, 2]
var task4_2 = [3, 4]
task4.append(5)
var task4All = task4 + task4_2
task4 += [4]
task4.insert(6, at: 4)

// –ó–∞–¥–∞–Ω–∏–µ 6
/*
 –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ 7 5 2
 –ü–æ—Ç–æ–º 7 9 2
 –ü–æ—Ç–æ–º 7 9 11
 */

// –ó–∞–¥–∞–Ω–∏–µ 7
var task7Name = ["Anton", "Polina", "Andrey", "Sveta", "Tanya"]
var greeting = ""
for (index, name) in task7Name.enumerated() {
    let i = 0
    if i == index % 2 {
        greeting += "Go left, \(name); "
    } else {
        greeting += "Go right, \(name); "
    }
}
print(greeting)

// –ó–∞–¥–∞–Ω–∏–µ 8
/*
 –ú–∞—Å—Å–∏–≤ –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –≤ –º–∞—Å—Å–∏–≤–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏.
 –°–µ—Ç –Ω–µ –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º, –Ω–æ –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ.
 */

// –ó–∞–¥–∞–Ω–∏–µ 9
/*
 myEmoji.intersection(wifeEmoji)  "üòÇ", "üéä"
 myEmoji.symmetricDifference(wifeEmoji) "üï∫", "üöÄ", "üé∏", "ü¶ã"
 myEmoji.union(wifeEmoji) "üòÇ", "üéä", "üï∫", "üöÄ", "üé∏", "üòÇ", "üéä", "ü¶ã"
 myEmoji.subtracting(wifeEmoji) "üï∫", "üöÄ"
 */

// –ó–∞–¥–∞–Ω–∏–µ 10
/*
 Set –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –¥–ª—è –Ω–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–∫–æ–π –Ω–∏–±—É–¥—å –∏–≥—Ä–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–ª –±—ã –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –Ω–∏–∫
 Array –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω —Å–æ–ª–∏—Å—Ç–æ–≤ –≥—Ä—É–ø–ø. –ü–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞–∑–≤–∞–ª –±—ã –∏–º–µ–Ω–µ–º –≥—Ä—É–ø–ø—ã, –∑–Ω–∞—á–µ–Ω–∏—è –±—ã –±—ã–ª–∏ –∏–º–µ–Ω–∞ —Å–æ–ª–∏—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã.
 Ditionary –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ. –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –∞ –∑–Ω–∞—á–µ–Ω–∏—é –±—ã –ø—Ä–∏—Å–≤–æ–∏–ª –Ω–æ–º–µ—Ä –ø–æ–ª–∫–∏ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–∂–∏—Ç –∫–Ω–∏–≥–∞.
 */

// –ó–∞–¥–∞–Ω–∏–µ 11
let number1 = 5
let power = 2
var result = 1
for _ in 0..<power {
    result = number1 * result
}
print(result)


// –ó–∞–¥–∞–Ω–∏–µ 12
let mood = 7
if mood <= 3 {
    print("Bad mood")
} else if mood >= 4 && mood <= 7 {
    print("Good mood")
} else {
    print("Great mood")
}

switch mood {
case 0..<3: print("Bad mood")
case 4..<8: print("Good mood")
default: print("Great mood")
}

// –ö–æ–ª–ª–µ–∫—Ü–∏–∏
// –û—Ç–≤–µ—Ç "üèÜ", "üíÉ", "üé∞üíÉ"

// –£—Å–ª–æ–≤–∏—è
// –û—Ç–≤–µ—Ç Good emoji

// –¶–∏–∫–ª—ã
// –û—Ç–≤–µ—Ç 24
